spring:

  application:
    name: product-service

  kafka:
    retries: 5
    bootstrap-servers: localhost:9092
    topic:
      product-low-stock: product-low-stock
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  datasource:
    url: jdbc:h2:file:/data/ecommerce #this if you want the database to be persistent
    #url: jdbc:h2:mem:ecommerce;
    driver-class-name: org.h2.Driver
    username: sa
    password: password

  h2:
    console:
      enabled: true
      path: /h2-console

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: none
    properties:
      cache:
        use_second_level_cache: true
        use_query_cache: true
        region:
          factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
        javax:
          cache:
            provider: org.ehcache.jsr107.EhcacheCachingProvider
            uri: classpath:ehcache.xml


  flyway:
    enabled: true
    locations: classpath:db/migration

  graphql:
    graphiql:
      enabled: true

  cache:
    type: simple
    cache-names: configurations

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.cloud.openfeign: DEBUG
    feign: DEBUG
    com.ejada.product.service.client: DEBUG


management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

constants:
  stock-threshold: 5

client:
  user:
    url: https://reqres.in
    login-path: /api/login
    create-user-path: /api/user
